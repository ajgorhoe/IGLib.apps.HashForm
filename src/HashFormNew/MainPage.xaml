<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="IG.App.MainPage"
             xmlns:viewmodel="clr-namespace:IG.App.ViewModel"
             xmlns:IGUI="clr-namespace:IG.UI"
             x:DataType="viewmodel:MainViewModel"
             
             MinimumWidthRequest="400" MinimumHeightRequest="600"
             
             BackgroundColor="{StaticResource Page_BackgroundColor_LightTheme}"
             >

    <ContentPage.Resources>
        <IGUI:BoolInvertConverter x:Key="BoolInvertConverter" />
        <IGUI:BoolAndMultiConverter x:Key="BoolAndMultiConverter" />
        <IGUI:BoolOrMultiConverter x:Key="BoolOrMultiConverter" />
        <IGUI:MainIndicatorLightMultiConverter x:Key="MainIndicatorLightMultiConverter" />
    </ContentPage.Resources>
    
    <ScrollView>

        <Frame 
            x:Name="OuterFrame"
            HorizontalOptions="Fill"
            VerticalOptions="Fill"
            StyleClass="FrameDebugStyle1"
            >


            <Frame
                HorizontalOptions="Fill"
                VerticalOptions="Fill"
                StyleClass="FrameDebugStyle2"
                >

                <Grid 
                    RowDefinitions="Auto, Auto,  * "
                    ColumnDefinitions="*"
                    HorizontalOptions="Fill"
                    VerticalOptions="Fill"
                    StyleClass="LayoutDebugStyle3"
                    >

                    <Frame
                        HorizontalOptions="Fill" 
                        VerticalOptions="Fill"
                        StyleClass="FrameDebugStyle4"
                        >

                        <VerticalStackLayout Grid.Row="0" Grid.Column="0"
                            x:Name="OuterLayout"  
                            HorizontalOptions="Fill" 
                            VerticalOptions="Start"
                            >
                            <Grid 
                            x:Name="TopControlsContainer"
                            Margin="0" 
                            HorizontalOptions="Fill"
                            VerticalOptions="Fill"
                            >

                                <HorizontalStackLayout 
                                    x:Name="FileSwitchContainer"
                                    HorizontalOptions="Start" Spacing="0" >
                                    <RadioButton x:Name="FileSwitch" IsChecked="{Binding IsFileHashing}" Content="Files" HorizontalOptions="Start" />
                                    <RadioButton x:Name="TextSwitxh" IsChecked="{Binding IsTextHashing}" Content="Text"  HorizontalOptions="Start" />
                                </HorizontalStackLayout>

                                <HorizontalStackLayout HorizontalOptions="End" Spacing="4"  >
                                    <Label x:Name="DebugSwitchLabel"
                                        Text="Debug Info"
                                        IsVisible="{Binding IsDebugMode}"
                                        HorizontalOptions="End" VerticalOptions="Center"  />
                                    <CheckBox x:Name="DebugCheckBox" IsChecked="{Binding IsDebugInfoVisible}"  
                                        BackgroundColor="Black" Color="Blue"
                                        IsVisible="{Binding IsDebugMode}"    HorizontalOptions="End" 
                                        Margin="4, 0, 8, 0" />
                                    <Button 
                                        x:Name="ButtonForContext" Text="Help" 
                                        Command="{Binding HelpCommand}"
                                        HorizontalOptions="End" />
                                    <Button Text="About"
                                     Command="{Binding AboutCommand}"
                                     HorizontalOptions="End" />
                                        </HorizontalStackLayout>
                            </Grid>

                            <Grid x:Name="FileSelectContainer"
                                HorizontalOptions="Fill" RowDefinitions="*" ColumnDefinitions="Auto, *, Auto"
                                ColumnSpacing="4" >


                                <Label 
                                    x:Name="FileSelectLabel" 
                                    Text="File: " Grid.Row="0" Grid.Column="0" HorizontalOptions="Center" 
                                    VerticalOptions="Center"></Label>
                                <Entry 
                                    x:Name="FileSelectEntry" Placeholder="File Path"  Grid.Row="0" Grid.Column="1"
                                    Text="{Binding FilePath}" IsEnabled="{Binding IsFileHashing}"
                                    HorizontalOptions="Fill" VerticalOptions="Center"
                                    >
                                    <Entry.GestureRecognizers>
                                        <DropGestureRecognizer
                                        DragOver="OnDragOverFileEntry"
                                        DragLeave="OnDragLeaveFileEntry"
                                        Drop="OnDropFileEntry"
                                        AllowDrop="False"
                                        />
                                        <!--
                                        WARNING: The drop gesture from above causes application crash due to bug in MAUI.
                                        This bug manifests itself when something (like text) is dropped to a control from another application.
                                        To avoid crashing the application, you can disable drops by setting
                                        AllowDrop="False"
                                        -->

                                    </Entry.GestureRecognizers>
                                </Entry>
                                <Button
                                    x:Name="FileBrowseButton" 
                                    Text="Browse" IsEnabled="{Binding IsFileHashing}" Clicked="OnButtonBrowseClicked" 
                                    Grid.Row="0" Grid.Column="2" 
                                    HorizontalOptions="End" VerticalOptions="Center"  Margin="10, 0, 0, 0">
                                </Button>
                            </Grid>

                            <HorizontalStackLayout x:Name="CalculateButtonsContainer" 
                                Margin="0" HorizontalOptions="Fill">
                            </HorizontalStackLayout>

                            <Grid 
                            x:Name="CalculateButtonsOuterContainer"
                            Margin="0" Padding="0"
                            HorizontalOptions="Fill"
                            VerticalOptions="Fill"
                            >

                                <ActivityIndicator IsRunning="{Binding IsCalculating}" IsVisible="{Binding IsCalculating}" 
                                    Color="DarkRed" />

                                <HorizontalStackLayout 
                                    x:Name="CalculateButtonsLeftContainer"
                                    HorizontalOptions="Start" Spacing="0" >
                                    
                                    <!--
                                        REMARK: with CalculateButton, the IsVisible binding below behaves correctly, but IsEnabled does not.
                                        IsEnabled="{Binding IsCalculating, Converter={StaticResource BoolInvertConverter} }"
                                    -->
                                    <Button x:Name="CalculateButton" Text="Calculate Hashes" 
                                        Clicked="ButtonCalculate_Clicked"
                                        HorizontalOptions="Start" />
                                    <Button x:Name="ClearButton" Text="Clear Values" 
                                        IsEnabled="{Binding IsCalculating, Converter={StaticResource BoolInvertConverter} }"
                                        Clicked="ButtonClear_Clicked"
                                        HorizontalOptions="End" />
                                    
                                    <!--
                                    Remark: Eventually, the indicator light may be surrounded by a frame or border. 
                                    Currently this is not used. In the futuer, you can uncomment the Frame and enclose
                                    the BoxView in it.
                                    <Frame
                                        x:Name="IndicatorFrame"
                                        BorderColor="DarkGray"
                                        CornerRadius="0"
                                        Margin="0,5,10,5"
                                        Padding="2"
                                        HorizontalOptions="Start"
                                        VerticalOptions="Fill"
                                        >
                                    </Frame>
                                    -->
                                    <BoxView 
                                        x:Name="IndicatorLight"
                                        WidthRequest="20"
                                        HorizontalOptions="StartAndExpand"
                                        VerticalOptions="Fill"
                                        Margin="10,5,2,5"
                                        >

                                        <BoxView.Color>
                                            <MultiBinding Mode="OneWay" >
                                                <MultiBinding.Converter>
                                                    <IGUI:MainIndicatorLightMultiConverter
                                                        InsufficientDataColor="Red"
                                                        SufficientDataColor="DarkGreen"
                                                        CalculatingColor="BlueViolet"
                                                        CalculatedColor="LimeGreen"
                                                        >
                                                    </IGUI:MainIndicatorLightMultiConverter>
                                                </MultiBinding.Converter>
                                                
                                                <Binding Path="IsInputDataSufficient" />
                                                <Binding Path="IsCalculating" />
                                                <Binding Path="IsHashesCalculated" />
                                            </MultiBinding>
                                        </BoxView.Color>
                                    </BoxView>
                                        
                                </HorizontalStackLayout>

                                <HorizontalStackLayout 
                                    x:Name="CalculateButtonsRightContainer"
                                    Margin="0" Padding="0"
                                    HorizontalOptions="End" Spacing="4"  >


                                    <Button Text="Query VirusTotal"
                                         Clicked="ButtonQueryVirusTotal_Clicked"
                                         HorizontalOptions="End" >
                                        <Button.IsEnabled>
                                            <Binding Mode="OneWay" >
                                                <Binding.Converter >
                                                    <IGUI:BoolInvertConverter />
                                                </Binding.Converter>
                                                <Binding.Path>IsCalculating</Binding.Path>
                                            </Binding>
                                        </Button.IsEnabled>
                                        <Button.IsVisible>
                                            <MultiBinding Mode="OneWay" >
                                                <MultiBinding.Converter>
                                                    <IGUI:BoolAndMultiConverter />
                                                </MultiBinding.Converter>
                                                <Binding Path="IsInputDataSufficient" />
                                                <Binding Path="IsFileHashing" />
                                                <!--
                                                 <Binding Path="IsCalculating"
                                                    Converter="{StaticResource BoolInvertConverter}" />
                                               -->
                                            </MultiBinding>
                                        </Button.IsVisible>

                                    </Button>

                                    <!--
                                         IsEnabled ="{Binding Path=IsCalculating, Converter={StaticResource BoolInvertConverter}}"
                                         IsVisible="{Binding IsInputDataSufficient}"
                                    -->
                                    
                                    <Button 
                                        x:Name="CancelButton" Text="Cancel" 
                                        Command="{Binding CancelCurrentOpperationCommand}"
                                        IsVisible="{Binding IsCalculating}"
                                        HorizontalOptions="End" />
                                </HorizontalStackLayout>
                            </Grid>


                            <HorizontalStackLayout x:Name="CalculateOptionsContainer" 
                    Margin="0" HorizontalOptions="Fill">
                                <CheckBox 
                        x:Name="RecalculateCheckBox" 
                        IsChecked="{Binding CalculateHashesAutomatically}" />
                                <Label  x:Name="RecalculateLabel" Text="Recalculate Automatically " VerticalOptions="Center" />
                                <CheckBox 
                        x:Name="SaveToFileCheckBox" 
                        IsChecked="{Binding IsSaveFileHashesToFile}" />
                                <Label  x:Name="SaveToFileLabel" Text="Save File Hashes to a File " VerticalOptions="Center" />
                                <CheckBox 
                        x:Name="UpperCaseCheckBox" 
                        IsChecked="{Binding IsUpperCaseHashes}" />
                                <Label  x:Name="UpperCaseLabel" Text="Upper Case Hashes " VerticalOptions="Center" />
                            </HorizontalStackLayout>

                            <Border x:Name="DebugInfoBorder"
                                IsVisible="{Binding IsDebugInfoVisible}" 
                                HorizontalOptions="Fill"
                                Stroke="LightBlue"
                                StrokeThickness="2"
                                StrokeShape="RoundRectangle 5,5,5,5"
                                Background="Transparent"
                                Padding="10, 5, 10, 5" 
                                >

                                <VerticalStackLayout 
                                    x:Name="DebugInfoContainer"
                                    HorizontalOptions="Fill">
                                    <HorizontalStackLayout 
                                        x:Name="HashValuesTitleAndMessageContainer"
                                        Spacing="4" HorizontalOptions="Fill" >
                                        <Label Text="Debug info: " HorizontalOptions="Start" TextDecorations="Underline" />
                                        <Label Text="{Binding DebugMessage, StringFormat='    {0}'}" TextColor="Blue" />
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout 
                                        x:Name="HashValuesInfoContainer"
                                        Spacing="4" HorizontalOptions="Fill" >
                                        <Label Text="NumCalculaions: " HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        <Label Text="{Binding NumActiveCalculationTasks}" HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        
                                        <Label Text="IsCalculating: "  />
                                        <Label Text="{Binding IsCalculating}" TextColor="BlueViolet" />
                                        <Label Text="IsHashesCalculated: "  />
                                        <Label Text="{Binding IsHashesCalculated}" TextColor="LimeGreen" />
                                        <Label Text="IsInputDataSufficient: " />
                                        <Label Text="{Binding IsInputDataSufficient}" TextColor="Red" />


                                        <Label Text="MD5: " HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        <Label Text="{Binding HashValueMD5}" HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        <!--
                                        <Label Text="SHA1: " HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        <Label Text="{Binding HashValueSHA1}" HorizontalOptions="Start" VerticalOptions="Center"></Label>
                                        -->
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout 
                                        x:Name="CalculationStateInfoContainer"
                                        Spacing="8">
                                        <Label Text="IsInputDataSufficient: "/>
                                        <Label Text="{Binding IsInputDataSufficient}" />
                                        <Label Text="IsHashesOutdated: "/>
                                        <Label Text="{Binding IsHashesOutdated}" />
                                        <Label Text="IsCalculationButtonsEnabled: "/>
                                        <Label Text="{Binding IsCalculationButtonsEnabled}" />

                                    </HorizontalStackLayout>

                                    <HorizontalStackLayout 
                            x:Name="DragDropInfoContainer"
                            Spacing="4" HorizontalOptions="Fill" >
                                        <Label Text="Drag and Drop:  Entry counter: " HorizontalOptions="Start" ></Label>
                                        <Label Text="{Binding NumEntries}"  HorizontalOptions="Start"/>
                                        <Label Text="Dropped value: " HorizontalOptions="Start" ></Label>
                                        <Label Text="{Binding DroppedTextValue}"  HorizontalOptions="Start"/>
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout 
                            x:Name="DirectoryInfoContainer"
                            Spacing="4" HorizontalOptions="Fill" >
                                        <Label Text="Directory: " HorizontalOptions="Start" ></Label>
                                        <Label Text="{Binding DirectoryPath}"  HorizontalOptions="Start"/>
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout 
                            x:Name="FileOrTextHashingInfoContainer"
                            Spacing="8">
                                        <Label Text="File hashing: "/>
                                        <Label Text="{Binding IsFileHashing}" />
                                        <Label Text="Text hashing: "/>
                                        <Label Text="{Binding IsTextHashing}" />
                                    </HorizontalStackLayout>
                                </VerticalStackLayout>

                            </Border>

                            <Grid 
                                x:Name="HashValuesContainer"
                                HorizontalOptions="Fill" 
                                RowDefinitions="1*, 1*, 1*, 1*" 
                                ColumnDefinitions="Auto, Auto, *, Auto"
                                RowSpacing="4" ColumnSpacing="4"
                                >


                                <!--
                                <HorizontalStackLayout>
                                </HorizontalStackLayout>
                                -->

                                <Label  x:Name="Md5Label" Grid.Row="0" Grid.Column="0" 
                                    Text="MD5:" 
                                    HorizontalOptions="Start" VerticalOptions="Center" >
                                    <Label.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    </Label.GestureRecognizers>
                                </Label>
                                <CheckBox  x:Name="Md5Checkbox" Grid.Row="0" Grid.Column="1" 
                                    IsChecked="{Binding CalculateMD5}" 
                                    HorizontalOptions="Start" VerticalOptions="End" />
                                <Border 
                                    x:Name ="Md5Border" Grid.Row="0" Grid.Column="2"
                                    Style="{StaticResource ControlBorderStyle}"
                                    >
                                    <Entry 
                                        x:Name="Md5ValueControl" Text="{Binding HashValueMD5}" IsReadOnly="True"
                                        HorizontalOptions="Fill" VerticalOptions="Center"
                                        Style="{StaticResource EntryResultStyle}" />
                                </Border>
                                <Button 
                                    x:Name="Md5CopyButton" Command="{Binding CopyHashToClipboardCommand}" CommandParameter="{Binding HashTypeMD5}"
                                    Grid.Row="0" Grid.Column="3" Text="Copy MD5" HorizontalOptions="Fill" VerticalOptions="Fill" 
                                    Padding="10, 0, 0, 0" />

                                <Label 
                                    x:Name="Sha1Label" Grid.Row="1" Grid.Column="0" Text="SHA-1: " 
                                    HorizontalOptions="Start" VerticalOptions="Center" >
                                    <Label.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    </Label.GestureRecognizers>
                                </Label>
                                <CheckBox 
                                    x:Name="Sha1Checkbox" Grid.Row="1" Grid.Column="1" 
                                    IsChecked="{Binding CalculateSHA1}" HorizontalOptions="Start" VerticalOptions="End" />
                                <Border 
                                    x:Name="Sha1Border" Grid.Row="1" Grid.Column="2" 
                                    Style="{StaticResource ControlBorderStyle}" 
                                    >
                                    <Entry 
                                        x:Name="Sha1ValueControl" Text="{Binding HashValueSHA1}"  IsReadOnly="True"
                                        HorizontalOptions="Fill" VerticalOptions="Center" 
                                        Style="{StaticResource EntryResultStyle}" />
                                </Border>
                                <Button 
                                    x:Name="Sha1CopyButton" Command="{Binding CopyHashToClipboardCommand}" CommandParameter="{Binding HashTypeSHA1}"
                                    Grid.Row="1" Grid.Column="3" Text="Copy SHA-1" HorizontalOptions="Fill" VerticalOptions="Fill" Padding="10, 0, 0, 0" 
                                    />
                                
                                <Label 
                                    x:Name="Sha256Label" Grid.Row="2" Grid.Column="0" Text="SHA-256: " 
                                    HorizontalOptions="Start" VerticalOptions="Center" >
                                    <Label.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    </Label.GestureRecognizers>
                                </Label>
                                <CheckBox 
                                    x:Name="Sha256Checkbox" Grid.Row="2" Grid.Column="1" IsChecked="{Binding CalculateSHA256}" 
                                    HorizontalOptions="Start" VerticalOptions="End" />
                                <Border 
                                    x:Name="Sha256Border" Grid.Row="2" Grid.Column="2" 
                                    Style="{StaticResource ControlBorderStyle}" >
                                    <Entry 
                                        x:Name="Sha256ValueControl" Text="{Binding HashValueSHA256}" IsReadOnly="True" 
                                        HorizontalOptions="Fill" VerticalOptions="Center" 
                                        Style="{StaticResource EntryResultStyle}" />
                                </Border>
                                <Button 
                                    x:Name="Sha256CopyButton"  Command="{Binding CopyHashToClipboardCommand}" CommandParameter="{Binding HashTypeSHA256}"
                                    Grid.Row="2" Grid.Column="3" Text="Copy SHA-256" 
                                    HorizontalOptions="Fill" VerticalOptions="Fill" Padding="10, 0, 0, 0" />
                                
                                <Label 
                                    x:Name="Sha512Label" Grid.Row="3" Grid.Column="0" Text="SHA-512: " 
                                    HorizontalOptions="Start" VerticalOptions="Center" >
                                    <Label.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    </Label.GestureRecognizers>
                                </Label>
                                <CheckBox 
                                    x:Name="Sha512Checkbox" Grid.Row="3" Grid.Column="1" IsChecked="{Binding CalculateSHA512}" 
                                    HorizontalOptions="Start" VerticalOptions="End" />
                                <Border 
                                    x:Name="Sha512Border" Grid.Row="3" Grid.Column="2" 
                                    Style="{StaticResource ControlBorderStyle}" >
                                    <Entry 
                                        x:Name="Sha512ValueControl" Text="{Binding HashValueSHA512}" IsReadOnly="True" 
                                        HorizontalOptions="Fill" VerticalOptions="Center" 
                                        Style="{StaticResource EntryResultStyle}" />
                                </Border>
                                <Button 
                                    x:Name="Sha512CopyButton"  Command="{Binding CopyHashToClipboardCommand}" CommandParameter="{Binding HashTypeSHA512}"
                                    Grid.Row="3" Grid.Column="3" Text="Copy SHA-512" HorizontalOptions="Fill" VerticalOptions="Fill" 
                                    Padding="10, 0, 0, 0" />

                            </Grid>


                            <Grid ColumnDefinitions="2*, 1*"
                                x:Name="VerifyHashCommandContainer"
                                HorizontalOptions="Fill" 
                                >

                                <Label Grid.Row="0" Grid.Column="0"
                                    x:Name="VerifyHashLabel" Text="Verify Specific Hash Value (any Supported Type): "
                                    HorizontalOptions="Start"
                                    VerticalOptions="Center" />
                                <Button Grid.Row="0" Grid.Column="1"
                                    x:Name="VerifyHashButton" Text="Verify Hash"
                                    Command="{Binding VerifyHashCommand}"
                                    HorizontalOptions="End"
                                    VerticalOptions="Center"
                                    />
                            </Grid>
                            <Grid 
                                x:Name="VerifyHashValueContainer"
                                ColumnDefinitions="Auto, *, Auto"
                                ColumnSpacing="4"
                                HorizontalOptions="Fill"
                                >
                                <Grid.GestureRecognizers>
                                    <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    <DropGestureRecognizer
                                        DragOver="OnDragOverVerifiedHashValueEntry"
                                        DragLeave="OnDragLeaveVerifiedHashValueEntry"
                                        Drop="OnDropVerifiedHashValueEntry"
                                        AllowDrop="True"
                                        />
                                    <!--
                                    WARNING: The drop gesture from above causes application crash due to bug in MAUI.
                                    This bug manifests itself when something (like text) is dropped to a control from another application.
                                    To avoid crashing the application, you can disable drops by setting
                                    AllowDrop="False"
                                    -->

                                </Grid.GestureRecognizers>
                                
                                <Label Grid.Row="0" Grid.Column="0"
                                    x:Name="VerifiedHashValueLabel" Text="Hash value:"
                                    HorizontalOptions="Start"
                                    VerticalOptions="Center"
                                    >
                                    <Label.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True"  />
                                    </Label.GestureRecognizers>
                                </Label>

                                <Entry Grid.Row="0" Grid.Column="1"
                                    x:Name="VerifiedHashValueEnty" Text="{Binding VerifiedHashValue}"
                                    Placeholder="Hash value to be verified"
                                    HorizontalOptions="Fill"
                                    VerticalOptions="Center"
                                    >
                                    <Entry.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True" />
                                    </Entry.GestureRecognizers>
                                </Entry>

                                <Button Grid.Row="0" Grid.Column="2"
                                    x:Name="VerifiedHashValueCopyButton" Text="Paste" 
                                    Command="{Binding PasteVerifiedHashFromClipboardCommand}"
                                    HorizontalOptions="End"
                                    VerticalOptions="Center"
                                    >
                                    <Button.GestureRecognizers>
                                        <DragGestureRecognizer DragStarting="DragStarting_GetText" CanDrag="True" />
                                    </Button.GestureRecognizers>
                                </Button>

                            </Grid>



                        </VerticalStackLayout>


                    </Frame>


                    <Label  
                        Grid.Row="1" Grid.Column="0"
                        x:Name="HashedContentLabel" Text="{Binding TextEntryLabelText}" 
                        VerticalOptions="Start"
                        TextColor="Blue" Padding="0" />


                    <Editor Grid.Row="2" Grid.Column="0"
                            x:Name="HashedTextViewOrEntry" Text="{Binding TextToHash}"
                            IsReadOnly="{Binding IsFileHashing}"
                            Placeholder="Text to be hashed / File preview"
                            HorizontalOptions="Fill" 
                            VerticalOptions="Fill" 
                            MinimumHeightRequest="100"
                            Style="{StaticResource EditorResultStyle}"
                            >
                        <Editor.GestureRecognizers>
                            <DragGestureRecognizer >
                            </DragGestureRecognizer>
                            <DropGestureRecognizer 
                                AllowDrop="False" >
                            </DropGestureRecognizer>
                            <!-- Commented - causing crashes! Drop works only when dragging someething from 
                            the same application, if dragging e.g text from some text editor and dropping it
                            in control, the application will crash.
                            This is a MAUI / WinUI bug. See also:
                            https://github.com/dotnet/maui/issues/6080
                            https://github.com/dotnet/maui/issues/6684
                            You can avoid application crashes by disabling drops, e.g. by setting 
                            AllowDrop="False"
                            -->
                        </Editor.GestureRecognizers>
                    </Editor>


                    <Border  
                        Grid.Row="2" Grid.Column="0"
                        x:Name="ContentBorder" 
                        HorizontalOptions="Fill" 
                        VerticalOptions="End" 
                        Stroke="Green"
                        BackgroundColor="Green"
                        StrokeThickness="2"
                        StrokeShape="RoundRectangle 0, 0, 5, 5"
                        Padding="10"   >
                    </Border>

                </Grid>

            </Frame>


        </Frame>

    </ScrollView>




</ContentPage>

    